#!/bin/bash tr_exec.sh

. tr_src_wget.ish

TR_PACKAGE=zlib
TR_STORAGE="$TR/storage"
TR_WORK_ROOT="$TR/work"
TR_WORK="$TR_WORK_ROOT/$TR_PACKAGE"

TARGZ="zlib-1.2.11.tar.gz"
TARGZ_INTDIR="zlib-1.2.11"
URL="http://zlib.net/$TARGZ"

download() {
    echo 'running download'

    mkdir -p "$TR_STORAGE"

    rm -f "$TR_STORAGE/$TARGZ"
    curl -s -o "$TR_STORAGE/$TARGZ" "$URL"
}

sources() {
    echo 'running sources'

    mkdir -p "$TR_WORK"
    cd "$TR_WORK"

    rm -rf "src"
    tar xzf "$TR_STORAGE/$TARGZ"
    mv "zlib-1.2.11" "src"
}

configure() {
    echo 'running configure'

    #cd "$TR_WORK/src"
    #CHOST="$TSTENV_CHOST" CFLAGS="-fPIC" ./configure

    exit 1
}

build() {
    echo 'running build'

    #cd "$TSTENV_WORK/src"
    #make
}

install() {
    echo 'running install'

    #cd "$TSTENV_WORK/src"
    #make install prefix="$TSTENV_SYSROOT/usr/local"
}

############################################################

swd_info() {
    cat <<EndOfInfo
{
  "artifacts": {
    "packet"      : { "type": "file", "path": "$TR_STORAGE/$TARGZ" },
    "source-dir"  : { "type": "directory", "path": "$TR_WORK/src" },
    "build-dir"   : { "type": "directory", "path": "$TR_WORK/build" }
  },
  "steps": [
    {
      "name": "download",
      "artifacts":    [ "packet" ],
      "dependencies": [
        { "type": "data", "id": "url", "data": "$URL" },
        { "type": "artifact", "id": "packet" }
      ]
    }, {
      "name": "sources",
      "artifacts": [ "source-dir" ],
      "dependencies": [
        { "type": "artifact", "id": "source-dir" }
      ]
    }, {
      "name": "configure",
      "artifacts": [ "source-dir" ]
    }, {
      "name": "build",
      "artifacts": [ "build-dir" ]
    }, {
      "name": "install",
      "artifacts": [ "/install-dir" ]
    }
  ]
}
EndOfInfo
}
